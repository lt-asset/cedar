constraints:
  '**kwargs':
    descp: ''
  '*args':
    descp: ''
  h:
    descp: Height of resized image.
    doc_dtype: int, required
    dtype:
    - int
  interp:
    default: None
    descp: 'Interpolation method (default=cv2.INTER_LINEAR). Possible values: 0: Nearest
      Neighbors Interpolation. 1: Bilinear interpolation. 2: Bicubic interpolation
      over 4x4 pixel neighborhood. 3: Area-based (resampling using pixel area relation).
      It may be a preferred method for image decimation, as it gives moire-free results.
      But when the image is zoomed, it is similar to the Nearest Neighbors method.
      (used by default). 4: Lanczos interpolation over 8x8 pixel neighborhood. 9:
      Cubic for enlarge, area for shrink, bilinear for others 10: Random select from
      interpolation method metioned above. Note: When shrinking an image, it will
      generally look best with AREA-based interpolation, whereas, when enlarging an
      image, it will generally look best with Bicubic (slow) or Bilinear (faster but
      still looks OK). More details can be found in the documentation of OpenCV, please
      refer to http://docs.opencv.org/master/da/d54/group__imgproc__transform.html.'
    doc_dtype: int, optional, default=1
    dtype:
    - int
    ndim:
    - '0'
  out:
    default: None
    descp: The output NDArray to hold the result.
    doc_dtype: NDArray, optional
    structure:
    - ndarray
  src:
    descp: source image
    doc_dtype: NDArray
    structure:
    - ndarray
  w:
    descp: Width of resized image.
    doc_dtype: int, required
    dtype:
    - int
inputs:
  optional:
  - interp
  - out
  required:
  - src
  - w
  - h
  - '*args'
  - '**kwargs'
link: https://mxnet.apache.org/versions/1.6/api/python/docs/api/mxnet/image/index.html#mxnet.image.imresize
package: mxnet
target: imresize
title: mxnet.image.imresize
version: 1.6.0
