check_nan: true
constraints:
  '**kwargs':
    descp: ''
  bidirectional:
    default: 'False'
    descp: If True, becomes a bidirectional RNN.
    doc_dtype: bool, default False
  dropout:
    default: '0'
    descp: If non-zero, introduces a dropout layer on the outputs of each RNN layer
      except the last layer.
    doc_dtype: float, default 0
    dtype:
    - float
    ndim:
    - '0'
  dtype:
    default: float32
    descp: Type to initialize the parameters and default states to
    doc_dtype: str, default 'float32'
    dtype:
    - numpy.float32
    - string
  h2h_bias_initializer:
    default: zeros
    descp: Initializer for the bias vector.
    doc_dtype: str or Initializer
    dtype:
    - string
    ndim:
    - '0'
    structure:
    - list
  h2h_weight_initializer:
    default: None
    descp: Initializer for the recurrent weights matrix, used for the linear transformation
      of the recurrent state.
    doc_dtype: str or Initializer
    dtype:
    - string
  h2r_weight_initializer:
    default: None
    descp: Initializer for the projected recurrent weights matrix, used for the linear
      transformation of the recurrent state to the projected space.
    doc_dtype: str or Initializer, default None
    dtype:
    - string
  hidden_size:
    descp: The number of features in the hidden state h.
    doc_dtype: int
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  i2h_bias_initializer:
    default: zeros
    descp: Initializer for the bias vector. By default, bias for the forget gate is
      initialized to 1 while all other biases are initialized to zero.
    doc_dtype: str or Initializer, default 'lstmbias'
    dtype:
    - string
    ndim:
    - '0'
    structure:
    - list
  i2h_weight_initializer:
    default: None
    descp: Initializer for the input weights matrix, used for the linear transformation
      of the inputs.
    doc_dtype: str or Initializer
    dtype:
    - string
  input_size:
    default: '0'
    descp: The number of expected features in the input x. If not specified, it will
      be inferred from input.
    doc_dtype: int, default 0
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  layout:
    default: TNC
    descp: The format of input and output tensors. T, N and C stand for sequence length,
      batch size, and feature dimensions respectively.
    doc_dtype: str, default 'TNC'
    dtype:
    - string
    ndim:
    - '0'
    tensor_t:
    - tensor
  num_layers:
    default: '1'
    descp: Number of recurrent layers.
    doc_dtype: int, default 1
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  params:
    default: None
    descp: Shared Parameters for this Block.
    doc_dtype: ParameterDict or None
  prefix:
    default: None
    descp: Prefix of this Block.
    doc_dtype: str or None
    dtype:
    - string
  projection_size:
    default: None
    descp: The number of features after projection.
    doc_dtype: int, default None
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  state_clip_max:
    default: None
    descp: Maximum clip value of LSTM states. This option must be used together with
      state_clip_min. If None, clipping is not applied.
    doc_dtype: float or None, default None
    dtype:
    - float
  state_clip_min:
    default: None
    descp: Minimum clip value of LSTM states. This option must be used together with
      state_clip_max. If None, clipping is not applied.
    doc_dtype: float or None, default None
    dtype:
    - float
  state_clip_nan:
    default: 'False'
    descp: Whether to stop NaN from propagating in state by clipping it to min/max.
      If the clipping range is not specified, this option is ignored.
    doc_dtype: boolean, default False
inputs:
  optional:
  - num_layers
  - layout
  - dropout
  - bidirectional
  - input_size
  - i2h_weight_initializer
  - h2h_weight_initializer
  - i2h_bias_initializer
  - h2h_bias_initializer
  - projection_size
  - h2r_weight_initializer
  - state_clip_min
  - state_clip_max
  - state_clip_nan
  - dtype
  - prefix
  - params
  required:
  - hidden_size
  - '**kwargs'
layer_constructor: true
link: https://mxnet.apache.org/versions/1.6.0/api/python/docs/api/gluon/rnn/index.html#mxnet.gluon.rnn.LSTM
package: mxnet
target: LSTM
title: mxnet.gluon.rnn.LSTM
version: 1.6.0
