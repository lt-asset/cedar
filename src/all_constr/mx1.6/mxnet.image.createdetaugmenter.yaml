constraints:
  area_range:
    default: (0.05,3.0)
    descp: The cropped area of the image must contain a fraction of the supplied image
      within in this range.
    doc_dtype: tuple of floats
    dtype:
    - float
    structure:
    - tuple
  aspect_ratio_range:
    default: (0.75,1.33)
    descp: The cropped area of the image must have an aspect ratio = width / height
      within this range.
    doc_dtype: tuple of floats
    dtype:
    - float
    structure:
    - tuple
  brightness:
    default: '0'
    descp: Brightness jittering range (percent)
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  contrast:
    default: '0'
    descp: Contrast jittering range (percent)
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  data_shape:
    descp: Shape for output data
    doc_dtype: tuple of int
    dtype:
    - int
    structure:
    - tuple
  hue:
    default: '0'
    descp: Hue jittering range (percent)
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  inter_method:
    default: '2'
    descp: 'Interpolation method for all resizing operations Possible values: 0: Nearest
      Neighbors Interpolation. 1: Bilinear interpolation. 2: Area-based (resampling
      using pixel area relation). It may be a preferred method for image decimation,
      as it gives moire-free results. But when the image is zoomed, it is similar
      to the Nearest Neighbors method. (used by default). 3: Bicubic interpolation
      over 4x4 pixel neighborhood. 4: Lanczos interpolation over 8x8 pixel neighborhood.
      9: Cubic for enlarge, area for shrink, bilinear for others 10: Random select
      from interpolation method metioned above. Note: When shrinking an image, it
      will generally look best with AREA-based interpolation, whereas, when enlarging
      an image, it will generally look best with Bicubic (slow) or Bilinear (faster
      but still looks OK). '
    doc_dtype: int, default=2(Area-based
    ndim:
    - '0'
  max_attempts:
    default: '50'
    descp: Number of attempts at generating a cropped/padded region of the image of
      the specified constraints. After max_attempts failures, return the original
      image.
    doc_dtype: int
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  mean:
    default: None
    descp: Mean pixel values for [r, g, b]
    doc_dtype: np.ndarray or None
  min_eject_coverage:
    default: '0.3'
    descp: The minimum coverage of cropped sample w.r.t its original size. With this
      constraint, objects that have marginal area after crop will be discarded.
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  min_object_covered:
    default: '0.1'
    descp: The cropped area of the image must contain at least this fraction of any
      bounding box supplied. The value of this parameter should be non-negative. In
      the case of 0, the cropped area does not need to overlap any of the bounding
      boxes supplied.
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  pad_val:
    default: (127,127,127)
    descp: Pixel value to be filled when padding is enabled. pad_val will automatically
      be subtracted by mean and divided by std if applicable.
    doc_dtype: float
    dtype:
    - float
  pca_noise:
    default: '0'
    descp: Pca noise level (percent)
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  rand_crop:
    default: '0'
    descp: '[0, 1], probability to apply random cropping'
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  rand_gray:
    default: '0'
    descp: '[0, 1], probability to convert to grayscale for all channels'
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  rand_mirror:
    default: 'False'
    descp: Whether to apply horizontal flip to image with probability 0.5
    doc_dtype: bool
    dtype:
    - boolean
  rand_pad:
    default: '0'
    descp: '[0, 1], probability to apply random padding'
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  resize:
    default: '0'
    descp: Resize shorter edge if larger than 0 at the begining
    doc_dtype: int
    dtype:
    - int
    ndim:
    - '0'
  saturation:
    default: '0'
    descp: Saturation jittering range (percent)
    doc_dtype: float
    dtype:
    - float
    ndim:
    - '0'
  std:
    default: None
    descp: Standard deviations for [r, g, b]
    doc_dtype: np.ndarray or None
inputs:
  optional:
  - resize
  - rand_crop
  - rand_pad
  - rand_gray
  - rand_mirror
  - mean
  - std
  - brightness
  - contrast
  - saturation
  - pca_noise
  - hue
  - inter_method
  - min_object_covered
  - aspect_ratio_range
  - area_range
  - min_eject_coverage
  - max_attempts
  - pad_val
  required:
  - data_shape
link: https://mxnet.apache.org/versions/1.6/api/python/docs/api/mxnet/image/index.html#mxnet.image.CreateDetAugmenter
package: mxnet
target: CreateDetAugmenter
title: mxnet.image.CreateDetAugmenter
version: 1.6.0
