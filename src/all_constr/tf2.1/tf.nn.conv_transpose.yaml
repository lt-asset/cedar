aliases:
- tf.compat.v1.nn.conv_transpose
check_nan: true
constraints:
  data_format:
    default: None
    descp: A string or None.  Specifies whether the channel dimension of the `input`
      and output is the last dimension (default, or if `data_format`does not start
      with "NC"), or the second dimension (if `data_format`starts with "NC").  For
      N=1, the valid values are "NWC" (default) and "NCW".  For N=2, the valid values
      are "NHWC" (default) and "NCHW". For N=3, the valid values are "NDHWC" (default)
      and "NCDHW".
    dtype:
    - tf.string
  dilations:
    default: None
    descp: An int or list of `ints` that has length `1`, `N` or `N+2`, defaults to
      1. The dilation factor for each dimension of`input`. If a single value is given
      it is replicated in the spatial dimensions. By default the `N` and `C` dimensions
      are set to 1. If set to k > 1, there will be k-1 skipped cells between each
      filter element on that dimension. The dimension order is determined by the value
      of `data_format`, see above for details.
    dtype:
    - int
    ndim:
    - '1'
    shape:
    - '[1]'
    - '[2]'
    structure:
    - list
  filters:
    descp: An N+2 dimensional `Tensor` with the same type as `input` and shape `spatial_filter_shape
      + [in_channels, out_channels]`.
    dtype:
    - dtype:&input
  input:
    descp: An N+2 dimensional `Tensor` of shape`[batch_size] + input_spatial_shape
      + [in_channels]` if data_format does not start with "NC" (default), or`[batch_size,
      in_channels] + input_spatial_shape` if data_format starts with "NC". It must
      be one of the following types:`half`, `bfloat16`, `float32`, `float64`.
    dtype:
    - tf.bfloat16
    - tf.float16
    - tf.float32
    - tf.float64
    enum:
    - data_format
    - starts
    - with
    ndim:
    - '1'
    - '2'
    shape:
    - '[batch_size,in_channels]'
    - '[batch_size]'
    - '[in_channels]'
    tensor_t:
    - tf.tensor
  name:
    default: None
    descp: A name for the operation (optional). If not specified "conv_transpose"
      is used.
    dtype:
    - tf.string
    ndim:
    - '0'
  output_shape:
    descp: A 1-D `Tensor` representing the output shape of the deconvolution op.
    ndim:
    - '1'
    tensor_t:
    - tf.tensor
  padding:
    default: SAME
    descp: A string, either `'VALID'` or `'SAME'`. The padding algorithm. See the
      "returns" section of `tf.nn.convolution` for details.
    dtype:
    - tf.string
    enum:
    - SAME
    - VALID
    ndim:
    - '0'
  strides:
    descp: An int or list of `ints` that has length `1`, `N` or `N+2`.  The stride
      of the sliding window for each dimension of `input`. If a single value is given
      it is replicated in the spatial dimensions. By default the `N` and `C` dimensions
      are set to 0. The dimension order is determined by the value of `data_format`,
      see below for details.
    dtype:
    - int
    ndim:
    - '1'
    shape:
    - '[1]'
    - '[2]'
    structure:
    - list
dependency:
- batch_size
- in_channels
inputs:
  optional:
  - padding
  - data_format
  - dilations
  - name
  required:
  - input
  - filters
  - output_shape
  - strides
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/nn/conv_transpose
outputs: A `Tensor` with the same type as `value`.
package: tensorflow
target: conv_transpose
title: tf.nn.conv_transpose
version: 2.1.0
