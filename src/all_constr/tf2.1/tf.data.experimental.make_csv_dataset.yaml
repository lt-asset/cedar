constraints:
  batch_size:
    descp: An int representing the number of records to combine in a single batch.
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  column_defaults:
    default: None
    descp: A optional list of default values for the CSV fields. One item per selected
      column of the input record. Each item in the list is either a valid CSV dtype
      (float32, float64, int32, int64, or string), or a`Tensor` with one of the aforementioned
      types. The tensor can either be a scalar default value (if the column is optional),
      or an empty tensor (if the column is required). If a dtype is provided instead
      of a tensor, the column is also treated as required. If this list is not provided,
      tries to infer types based on reading the first num_rows_for_inference rows
      of files specified, and assumes all columns are optional, defaulting to `0`for
      numeric values and `""` for string values. If both this and`select_columns`
      are specified, these must have the same lengths, and`column_defaults` is assumed
      to be sorted in order of increasing column index.
    structure:
    - list
    tensor_t:
    - tf.tensor
  column_names:
    default: None
    descp: An optional list of strings that corresponds to the CSV columns, in order.
      One per column of the input record. If this is not provided, infers the column
      names from the first row of the records. These names will be the keys of the
      features dict of each dataset element.
    dtype:
    - tf.string
    structure:
    - dict
    - list
  compression_type:
    default: None
    descp: (Optional.) A `tf.string` scalar evaluating to one of`""` (no compression),
      `"ZLIB"`, or `"GZIP"`. Defaults to no compression.
    enum:
    - GZIP
    - ZLIB
    ndim:
    - '0'
  field_delim:
    default: ','
    descp: An optional `string`. Defaults to `","`. Char delimiter to separate fields
      in a record.
    dtype:
    - tf.string
    ndim:
    - '0'
  file_pattern:
    descp: List of files or patterns of file paths containing CSV records. See `tf.io.gfile.glob`
      for pattern rules.
    structure:
    - list
  header:
    default: 'True'
    descp: A bool that indicates whether the first rows of provided CSV files correspond
      to header lines with column names, and should not be included in the data.
    dtype:
    - tf.bool
    ndim:
    - '0'
  ignore_errors:
    default: 'False'
    descp: (Optional.) If `True`, ignores errors with CSV file parsing, such as malformed
      data or empty lines, and moves on to the next valid CSV record. Otherwise, the
      dataset raises an error and stops processing when encountering any invalid records.
      Defaults to `False`.
    dtype:
    - tf.bool
    ndim:
    - '0'
  label_name:
    default: None
    descp: A optional string corresponding to the label column. If provided, the data
      for this column is returned as a separate `Tensor` from the features dictionary,
      so that the dataset complies with the format expected by a `tf.Estimator.train`
      or `tf.Estimator.evaluate` input function.
    dtype:
    - tf.string
    ndim:
    - '0'
  na_value:
    default: ''
    descp: Additional string to recognize as NA/NaN.
    dtype:
    - tf.string
  num_epochs:
    default: None
    descp: An int specifying the number of times this dataset is repeated. If None,
      cycles through the dataset forever.
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  num_parallel_reads:
    default: None
    descp: Number of threads used to read CSV records from files. If >1, the results
      will be interleaved. Defaults to `1`.
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  num_rows_for_inference:
    default: '100'
    descp: Number of rows of a file to use for type inference if record_defaults is
      not provided. If None, reads all the rows of all the files. Defaults to 100.
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  prefetch_buffer_size:
    default: None
    descp: An int specifying the number of feature batches to prefetch for performance
      improvement. Recommended value is the number of batches consumed per training
      step. Defaults to auto-tune.
    dtype:
    - int
    ndim:
    - '0'
    range:
    - '[0,inf)'
  select_columns:
    default: None
    descp: An optional list of integer indices or string column names, that specifies
      a subset of columns of CSV data to select. If column names are provided, these
      must correspond to names provided in`column_names` or inferred from the file
      header lines. When this argument is specified, only a subset of CSV columns
      will be parsed and returned, corresponding to the columns specified. Using this
      results in faster parsing and lower memory usage. If both this and `column_defaults`
      are specified, these must have the same lengths, and `column_defaults` is assumed
      to be sorted in order of increasing column index.
    dtype:
    - int
    - tf.string
    structure:
    - list
  shuffle:
    default: 'True'
    descp: A bool that indicates whether the input should be shuffled.
    dtype:
    - tf.bool
    ndim:
    - '0'
  shuffle_buffer_size:
    default: '10000'
    descp: Buffer size to use for shuffling. A large buffer size ensures better shuffling,
      but increases memory usage and startup time.
    dtype:
    - int
  shuffle_seed:
    default: None
    descp: Randomization seed to use for shuffling.
  sloppy:
    default: 'False'
    descp: If `True`, reading performance will be improved at the cost of non-deterministic
      ordering. If `False`, the order of elements produced is deterministic prior
      to shuffling (elements are still randomized if `shuffle=True`. Note that if
      the seed is set, then order of elements after shuffling is deterministic). Defaults
      to `False`.
    dtype:
    - tf.bool
    ndim:
    - '0'
  use_quote_delim:
    default: 'True'
    descp: An optional bool. Defaults to `True`. If false, treats double quotation
      marks as regular characters inside of the string fields.
    dtype:
    - tf.bool
    ndim:
    - '0'
exceptions:
- ValueError: If any of the arguments is malformed.
inputs:
  optional:
  - column_names
  - column_defaults
  - label_name
  - select_columns
  - field_delim
  - use_quote_delim
  - na_value
  - header
  - num_epochs
  - shuffle
  - shuffle_buffer_size
  - shuffle_seed
  - prefetch_buffer_size
  - num_parallel_reads
  - sloppy
  - num_rows_for_inference
  - compression_type
  - ignore_errors
  required:
  - file_pattern
  - batch_size
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/data/experimental/make_csv_dataset
outputs: A dataset, where each element is a (features, labels) tuple that corresponds
  to a batch of `batch_size` CSV rows. The features dictionary maps feature column
  names to `Tensor`s containing the corresponding column data, and labels is a `Tensor`
  containing the column data for the label column specified by `label_name`.
package: tensorflow
target: make_csv_dataset
title: tf.data.experimental.make_csv_dataset
version: 2.1.0
