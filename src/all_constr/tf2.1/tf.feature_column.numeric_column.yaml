aliases:
- tf.compat.v1.feature_column.numeric_column
constraints:
  default_value:
    default: None
    descp: A single value compatible with `dtype` or an iterable of values compatible
      with `dtype` which the column takes on during`tf.Example` parsing if data is
      missing. A default value of `None` will cause `tf.io.parse_example` to fail
      if an example does not contain this column. If a single value is provided, the
      same value will be applied as the default value for every item. If an iterable
      of values is provided, the shape of the `default_value` should be equal to the
      given `shape`.
    structure:
    - list
  dtype:
    default: tf.dtypes.float32
    descp: defines the type of values. Default value is `tf.float32`. Must be a non-quantized,
      real integer or floating point type.
    dtype:
    - float
    - int
    - tf.dtype
    - tf.float32
  key:
    descp: A unique string identifying the input feature. It is used as the column
      name and the dictionary key for feature parsing configs, feature`Tensor` objects,
      and feature columns.
    dtype:
    - tf.string
    ndim:
    - '0'
  normalizer_fn:
    default: None
    descp: 'If not `None`, a function that can be used to normalize the value of the
      tensor after `default_value` is applied for parsing. Normalizer function takes
      the input `Tensor` as its argument, and returns the output `Tensor`. (e.g. lambda
      x: (x - 3.0) / 4.2). Please note that even though the most common use case of
      this function is normalization, it can be used for any kind of Tensorflow transformations.'
    ndim:
    - '0'
  shape:
    default: (1,)
    descp: An iterable of integers specifies the shape of the `Tensor`. An integer
      can be given which means a single dimension `Tensor` with given width. The `Tensor`
      representing the column will have the shape of [batch_size] + `shape`.
    dtype:
    - int
    structure:
    - list
    tensor_t:
    - tf.tensor
exceptions:
- TypeError: if any dimension in shape is not an int
- ValueError: if any dimension in shape is not a positive integer
- TypeError: if `default_value` is an iterable but not compatible with `shape`
- TypeError: if `default_value` is not compatible with `dtype`.
- ValueError: if `dtype` is not convertible to `tf.float32`.
inputs:
  optional:
  - shape
  - default_value
  - dtype
  - normalizer_fn
  required:
  - key
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/feature_column/numeric_column
outputs: A `NumericColumn`.
package: tensorflow
target: numeric_column
title: tf.feature_column.numeric_column
version: 2.1.0
