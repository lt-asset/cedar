aliases:
- tf.compat.v1.nest.assert_same_structure
constraints:
  check_types:
    default: 'True'
    descp: if `True` (default) types of sequences are checked as well, including the
      keys of dictionaries. If set to `False`, for example a list and a tuple of objects
      will look the same if they have the same size. Note that namedtuples with identical
      name and fields are always considered to have the same shallow structure. Two
      types will also be considered the same if they are both list subtypes (which
      allows "list" and "_ListWrapper" from trackable dependency tracking to compare
      equal).
    dtype:
    - tf.bool
    ndim:
    - '0'
    structure:
    - list
    - tuple
  expand_composites:
    default: 'False'
    descp: If true, then composite tensors such as `tf.SparseTensor`and `tf.RaggedTensor`
      are expanded into their component tensors.
    dtype:
    - tf.bool
    ndim:
    - '0'
    tensor_t:
    - SparseTensor
    - tf.tensor
  nest1:
    descp: an arbitrarily nested structure.
  nest2:
    descp: an arbitrarily nested structure.
exceptions:
- ValueError: If the two structures do not have the same number of elements or if
    the two structures are not nested in the same way.
- TypeError: If the two structures differ in the type of sequence in any of their
    substructures. Only possible if `check_types` is `True`.
inputs:
  optional:
  - check_types
  - expand_composites
  required:
  - nest1
  - nest2
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/nest/assert_same_structure
package: tensorflow
target: assert_same_structure
title: tf.nest.assert_same_structure
version: 2.1.0
