aliases:
- tf.compat.v1.split
constraints:
  axis:
    default: '0'
    descp: An integer or scalar `int32` `Tensor`. The dimension along which to split.
      Must be in the range `[-rank(value), rank(value))`. Defaults to 0.
    dtype:
    - int
    - tf.int32
    ndim:
    - '0'
    tensor_t:
    - tf.tensor
  name:
    default: split
    descp: A name for the operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
  num:
    default: None
    descp: Optional, used to specify the number of outputs when it cannot be inferred
      from the shape of `size_splits`.
    ndim:
    - '0'
    range:
    - '[0,inf)'
  num_or_size_splits:
    descp: Either an integer indicating the number of splits along`axis` or a 1-D
      integer `Tensor` or Python list containing the sizes of each output tensor along
      `axis`. If a scalar, then it must evenly divide`value.shape[axis]`; otherwise
      the sum of sizes along the split axis must match that of the `value`.
    dtype:
    - int
    ndim:
    - '0'
    - '1'
    range:
    - '[0,inf)'
    shape:
    - '[1]'
    structure:
    - list
    tensor_t:
    - tf.tensor
  value:
    descp: The `Tensor` to split.
    tensor_t:
    - tf.tensor
exceptions:
- ValueError: If `num` is unspecified and cannot be inferred.
inputs:
  optional:
  - axis
  - num
  - name
  required:
  - value
  - num_or_size_splits
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/split
outputs: if `num_or_size_splits` is a scalar returns `num_or_size_splits` `Tensor`objects;
  if `num_or_size_splits` is a 1-D Tensor returns`num_or_size_splits.get_shape[0]`
  `Tensor` objects resulting from splitting`value`.
package: tensorflow
target: split
title: tf.split
version: 2.1.0
