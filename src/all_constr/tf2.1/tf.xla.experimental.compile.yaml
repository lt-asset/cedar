aliases:
- tf.compat.v1.xla.experimental.compile
constraints:
  computation:
    descp: A Python function that builds a computation to apply to the input. If the
      function takes n inputs, 'inputs' should be a list of n tensors.`computation`
      may return a list of operations and tensors.  Tensors must come before operations
      in the returned list.  The return value of`compile` is a list of tensors corresponding
      to the tensors from the output of `computation`.All `Operation`s returned from
      `computation` will be executed when evaluating any of the returned output tensors.
    structure:
    - list
    tensor_t:
    - tf.tensor
  inputs:
    default: None
    descp: A list of inputs or `None` (equivalent to an empty list). Each input can
      be a nested structure containing values that are convertible to tensors. Note
      that passing an N-dimension list of compatible values will result in a N-dimension
      list of scalar tensors rather than a single Rank-N tensors. If you need different
      behavior, convert part of inputs to tensors with `tf.convert_to_tensor`.
    ndim:
    - '0'
    structure:
    - list
    tensor_t:
    - tf.tensor
exceptions:
- RuntimeError: if called when eager execution is enabled.
inputs:
  optional:
  - inputs
  required:
  - computation
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/xla/experimental/compile
outputs: 'Same data structure as if computation(*inputs) is called directly with some
  exceptions for correctness. Exceptions include:   1) None output: a NoOp would be
  returned which control-depends on      computation.   2) Single value output: A
  tuple containing the value would be returned.   3) Operation-only outputs: a NoOp
  would be returned which      control-depends on computation.'
package: tensorflow
target: compile
title: tf.xla.experimental.compile
version: 2.1.0
