aliases:
- tf.compat.v1.extract_volume_patches
constraints:
  input:
    descp: 'A `Tensor`. Must be one of the following types: `float32`, `float64`,
      `int32`, `uint8`, `int16`, `int8`, `int64`, `bfloat16`, `uint16`, `half`, `uint32`,
      `uint64`. 5-D Tensor with shape `[batch, in_planes, in_rows, in_cols, depth]`.'
    dtype:
    - tf.bfloat16
    - tf.float16
    - tf.float32
    - tf.float64
    - tf.int16
    - tf.int32
    - tf.int64
    - tf.int8
    - tf.uint16
    - tf.uint32
    - tf.uint64
    - tf.uint8
    ndim:
    - '5'
    shape:
    - '[batch,in_planes,in_rows,in_cols,depth]'
    tensor_t:
    - tf.tensor
  ksizes:
    descp: A list of `ints` that has length `>= 5`. The size of the sliding window
      for each dimension of `input`.
    dtype:
    - int
    ndim:
    - '1'
    structure:
    - list
  name:
    default: None
    descp: A name for the operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
  padding:
    descp: 'A `string` from: `"SAME", "VALID"`. The type of padding algorithm to use.We
      specify the size-related attributes as:'
    dtype:
    - tf.dtype
    - tf.string
  strides:
    descp: 'A list of `ints` that has length `>= 5`. 1-D of length 5. How far the
      centers of two consecutive patches are in`input`. Must be: `[1, stride_planes,
      stride_rows, stride_cols, 1]`.'
    dtype:
    - int
    ndim:
    - '1'
    structure:
    - list
dependency:
- depth
- in_planes
- in_rows
- in_cols
- batch
inputs:
  optional:
  - name
  required:
  - input
  - ksizes
  - strides
  - padding
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/extract_volume_patches
outputs: A `Tensor`. Has the same type as `input`.
package: tensorflow
target: extract_volume_patches
title: tf.extract_volume_patches
version: 2.1.0
