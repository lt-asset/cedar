constraints:
  box_indices:
    descp: A 1-D tensor of shape `[num_boxes]` with int32 values in `[0, batch)`.
      The value of `box_ind[i]` specifies the image that the `i`-th box refers to.
    dtype:
    - tf.int32
    ndim:
    - '1'
    - '2'
    shape:
    - '[0,batch]'
    - '[num_boxes]'
    tensor_t:
    - tf.tensor
  boxes:
    descp: A 2-D tensor of shape `[num_boxes, 4]`. The `i`-th row of the tensor specifies
      the coordinates of a box in the `box_ind[i]` image and is specified in normalized
      coordinates `[y1, x1, y2, x2]`. A normalized coordinate value of `y` is mapped
      to the image coordinate at `y * (image_height - 1)`, so as the `[0, 1]` interval
      of normalized image height is mapped to `[0, image_height - 1]` in image height
      coordinates. We do allow `y1` > `y2`, in which case the sampled crop is an up-down
      flipped version of the original image. The width dimension is treated similarly.
      Normalized coordinates outside the `[0, 1]` range are allowed, in which case
      we use `extrapolation_value` to extrapolate the input image values.
    ndim:
    - '2'
    shape:
    - '[num_boxes,4]'
    tensor_t:
    - tf.tensor
  crop_size:
    descp: A 1-D tensor of 2 elements, `size = [crop_height, crop_width]`. All cropped
      image patches are resized to this size. The aspect ratio of the image content
      is not preserved. Both `crop_height` and `crop_width`need to be positive.
    ndim:
    - '1'
    - '2'
    shape:
    - '[crop_height,crop_width]'
    tensor_t:
    - tf.tensor
  extrapolation_value:
    default: '0'
    descp: An optional `float`. Defaults to `0`. Value used for extrapolation, when
      applicable.
    dtype:
    - float
    - int
    ndim:
    - '0'
  image:
    descp: A 4-D tensor of shape `[batch, image_height, image_width, depth]`. Both
      `image_height` and `image_width` need to be positive.
    ndim:
    - '4'
    shape:
    - '[batch,image_height,image_width,depth]'
    tensor_t:
    - tf.tensor
  method:
    default: bilinear
    descp: 'An optional string specifying the sampling method for resizing. It can
      be either `"bilinear"` or `"nearest"` and default to `"bilinear"`. Currently
      two sampling methods are supported: Bilinear and Nearest Neighbor.'
    dtype:
    - tf.string
    enum:
    - bilinear
    - nearest
    ndim:
    - '0'
  name:
    default: None
    descp: A name for the operation (optional).
    dtype:
    - tf.string
    ndim:
    - '0'
dependency:
- crop_width
- crop_height
- image_height
- depth
- image_width
- batch
- num_boxes
inputs:
  optional:
  - method
  - extrapolation_value
  - name
  required:
  - image
  - boxes
  - box_indices
  - crop_size
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/image/crop_and_resize
outputs: A 4-D tensor of shape `[num_boxes, crop_height, crop_width, depth]`.
package: tensorflow
target: crop_and_resize
title: tf.image.crop_and_resize
version: 2.1.0
