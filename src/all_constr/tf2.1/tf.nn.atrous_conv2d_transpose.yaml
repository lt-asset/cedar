aliases:
- tf.compat.v1.nn.atrous_conv2d_transpose
check_nan: true
constraints:
  filters:
    descp: A 4-D `Tensor` with the same type as `value` and shape`[filter_height,
      filter_width, out_channels, in_channels]`. `filters`'`in_channels` dimension
      must match that of `value`. Atrous convolution is equivalent to standard convolution
      with upsampled filters with effective height `filter_height + (filter_height
      - 1) * (rate - 1)` and effective width `filter_width + (filter_width - 1) *
      (rate - 1)`, produced by inserting `rate - 1` zeros along consecutive elements
      across the`filters`' spatial dimensions.
    dtype:
    - dtype:&value
    ndim:
    - '4'
    shape:
    - '[filter_height,filter_width,out_channels,in_channels]'
    tensor_t:
    - tf.tensor
  name:
    default: None
    descp: Optional name for the returned tensor.
    dtype:
    - tf.string
    ndim:
    - '0'
  output_shape:
    descp: A 1-D `Tensor` of shape representing the output shape of the deconvolution
      op.
    ndim:
    - '1'
    tensor_t:
    - tf.tensor
  padding:
    descp: A string, either `'VALID'` or `'SAME'`. The padding algorithm.
    dtype:
    - tf.string
    enum:
    - SAME
    - VALID
    ndim:
    - '0'
  rate:
    descp: A positive int32. The stride with which we sample input values across the
      `height` and `width` dimensions. Equivalently, the rate by which we upsample
      the filter values by inserting zeros across the `height` and`width` dimensions.
      In the literature, the same parameter is sometimes called `input stride` or
      `dilation`.
    dtype:
    - tf.int32
  value:
    descp: A 4-D `Tensor` of type `float`. It needs to be in the default `NHWC`format.
      Its shape is `[batch, in_height, in_width, in_channels]`.
    dtype:
    - float
    ndim:
    - '4'
    tensor_t:
    - tf.tensor
dependency:
- filter_width
- in_channels
- filter_height
- out_channels
exceptions:
- ValueError: If input/output depth does not match `filters`' shape, or if padding
    is other than `'VALID'` or `'SAME'`, or if the `rate` is less than one, or if
    the output_shape is not a tensor with 4 elements.
inputs:
  optional:
  - name
  required:
  - value
  - filters
  - output_shape
  - rate
  - padding
link: https://www.tensorflow.org/versions/r2.1/api_docs/python/tf/nn/atrous_conv2d_transpose
outputs: A `Tensor` with the same type as `value`.
package: tensorflow
target: atrous_conv2d_transpose
title: tf.nn.atrous_conv2d_transpose
version: 2.1.0
