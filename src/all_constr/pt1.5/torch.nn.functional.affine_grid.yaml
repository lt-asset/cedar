check_nan: true
constraints:
  align_corners:
    default: None
    descp: 'if `True`, consider `-1` and `1` to refer to the centers of the corner
      pixels rather than the image corners. Refer to `grid_sample()` for a more complete
      description. A grid generated by `affine_grid()` should be passed to `grid_sample()`
      with the same setting for this option. Default: `False`'
    doc_dtype: bool, optional
    dtype:
    - torch.bool
    ndim:
    - '0'
  size:
    descp: 'the target output image size. (N  times C  times H  times W  for 2D or
      N  times C  times D  times H  times W  for 3D) Example: torch.Size((32, 3, 24,
      24))'
    doc_dtype: torch.Size
    dtype:
    - int
    range:
    - '[0,inf)'
  theta:
    descp: input batch of affine matrices with shape (N  times 2  times 3 ) for 2D
      or (N  times 3  times 4 ) for 3D
    doc_dtype: Tensor
    tensor_t:
    - torch.tensor
inputs:
  optional:
  - align_corners
  required:
  - theta
  - size
link: https://pytorch.org/docs/stable/nn.functional.html#torch.nn.functional.affine_grid
package: torch
target: affine_grid
title: torch.nn.functional.affine_grid
version: 1.5.0
